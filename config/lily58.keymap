/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        WinShiftDance: WinShiftDance {
            compatible = "zmk,behavior-tap-dance";
            label = "WINSHIFTDANCE";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT LWIN>, <&kp LWIN>;
        };

        LayerModTap: LayerModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERMODTAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    macros {
        em_dash: em_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp RIGHT_ALT &kp KP_N0 &kp KP_NUMBER_1 &kp KP_NUMBER_5 &kp KP_NUMBER_1>,
                <&macro_release>;

            label = "EM_DASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |  BSPC |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |  \    |
            // | BKSP  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHFT  |  Z  |  X  |  C   |  V   |  B   |  [    |  |   ]   |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | DEL  | ESC  | ENT  | CTRL  |  | SPACE | LWR  | RAISE |  ESC  |
            // ------------------------------------------------------------------------------------------------------------

            bindings = <
&kp GRAVE      &kp N1  &kp N2  &kp N3      &kp N4   &kp N5                                   &kp N6            &kp N7         &kp N8       &kp N9   &kp N0    &kp DEL
&kp TAB        &kp Q   &kp W   &kp E       &kp R    &kp T                                    &kp Y             &kp U          &kp I        &kp O    &kp P     &kp BSLH
&kp BACKSPACE  &kp A   &kp S   &kp D       &kp F    &kp G                                    &kp H             &kp J          &kp K        &kp L    &kp SEMI  &kp SQT
&kp LSHIFT     &kp Z   &kp X   &kp C       &kp V    &kp B        &kp DEL      &kp BACKSPACE  &kp N             &kp M          &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
                               &kp DELETE  &kp ESC  &lt 2 ENTER  &kp LCTRL    &lt 3 SPACE    &LayerModTap 1 1  &kp RIGHT_ALT  &lt 4 ENTER
            >;

            label = "base";
        };

        f_numbers {
            bindings = <
&trans  &kp F1   &kp F2  &kp F3  &kp F4  &kp F5                      &kp F6     &kp F7  &kp F8  &kp F9  &kp F10    &kp F11
&trans  &kp F10  &kp F7  &kp F8  &kp F9  &none                       &kp PLUS   &kp N7  &kp N8  &kp N9  &kp STAR   &kp F12
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &none                       &kp MINUS  &kp N4  &kp N5  &kp N6  &kp FSLH   &kp EQUAL
&trans  &kp F12  &kp F1  &kp F2  &kp F3  &none   &trans    &kp BSPC  &kp N0     &kp N1  &kp N2  &kp N3  &kp COMMA  &trans
                         &trans  &trans  &trans  &trans    &trans    &trans     &trans  &mo 1
            >;

            label = "f-num";
        };

        symbols {
            bindings = <
&trans  &kp EXCL         &kp AT           &kp HASH           &kp DLLR               &kp PRCNT                        &kp CARET  &kp AMPS       &kp STAR      &kp LPAR              &kp RPAR               &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN      &kp POUND          &kp DOLLAR             &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &kp GRAVE        &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp EQUAL                        &kp MINUS  &trans         &trans        &trans                &trans                 &trans
&trans  &kp TILDE        &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp PLUS     &trans    &em_dash  &kp UNDER  &trans         &trans        &trans                &trans                 &trans
                                          &trans             &trans                 &trans       &trans    &trans    &trans     &trans         &trans
            >;

            label = "sym";
        };

        navigation {
            bindings = <
&trans  &trans  &trans    &trans            &trans             &trans                     &kp PSCRN  &none     &none   &none      &trans  &trans
&trans  &trans  &trans    &trans            &trans             &trans                     &trans     &trans    &trans  &trans     &trans  &trans
&trans  &trans  &kp HOME  &kp PG_UP         &kp PG_DN          &kp END                    &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans    &kp LG(LC(LEFT))  &kp LC(LG(RIGHT))  &trans   &trans    &trans  &trans     &none     &none   &none      &trans  &trans
                          &trans            &trans             &trans   &trans    &trans  &trans     &trans    &trans
            >;

            label = "nav";
        };

        board {
            bindings = <
&none  &none  &none  &none  &none  &none                  &none  &none  &none   &bt BT_PRV    &bt BT_NXT    &bt BT_CLR
&none  &none  &none  &none  &none  &none                  &none  &none  &none   &none         &none         &none
&none  &none  &none  &none  &none  &none                  &none  &none  &none   &kp C_PREV    &kp C_NEXT    &kp C_PP
&none  &none  &none  &none  &none  &none  &none    &none  &none  &none  &none   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
                     &none  &none  &none  &none    &none  &none  &none  &trans
            >;

            label = "keeb";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
