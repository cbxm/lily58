/*
 * Copyright (c) 2024 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        WinShiftDance: WinShiftDance {
            compatible = "zmk,behavior-tap-dance";
            label = "WINSHIFTDANCE";
            #binding-cells = <0>;
            bindings = <&mt LEFT_SHIFT LWIN>, <&kp LWIN>;
        };

        LayerModTap: LayerModTap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYERMODTAP";
            bindings = <&mo>, <&tog>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        dash_dance: dash_dance {
            compatible = "zmk,behavior-hold-tap";
            label = "DASH_DANCE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&em_dash>, <&kp>;
        };
    };

    macros {
        em_dash: em_dash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <30>;
            tap-ms = <40>;
            bindings = 
                <&macro_press &kp LALT>,
                <&macro_tap &kp KP_N0>,
                <&macro_tap &kp KP_N1>,
                <&macro_tap &kp KP_N5>,
                <&macro_tap &kp KP_N1>,
                <&macro_release &kp LALT>;
            label = "EM_DASH";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
&kp GRAVE      &kp N1  &kp N2  &kp N3      &kp N4   &kp N5                                   &kp N6            &kp N7         &kp N8       &kp N9   &kp N0    &kp DEL
&kp TAB        &kp Q   &kp W   &kp E       &kp R    &kp T                                    &kp Y             &kp U          &kp I        &kp O    &kp P     &kp BSLH
&kp BACKSPACE  &kp A   &kp S   &kp D       &kp F    &kp G                                    &kp H             &kp J          &kp K        &kp L    &kp SEMI  &kp SQT
&kp LSHIFT     &kp Z   &kp X   &kp C       &kp V    &kp B        &kp DEL      &kp BACKSPACE  &kp N             &kp M          &kp COMMA    &kp DOT  &kp FSLH  &kp RSHFT
                               &kp DELETE  &kp ESC  &lt 2 ENTER  &kp LCTRL    &lt 3 SPACE    &LayerModTap 1 1  &kp RIGHT_ALT  &lt 4 ENTER
            >;

            label = "base";
        };

        f_numbers {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                      &trans          &trans     &trans     &trans     &trans          &trans
&trans  &kp F10  &kp F7  &kp F8  &kp F9  &none                       &kp KP_PLUS     &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp KP_MULTIPLY  &trans
&trans  &kp F11  &kp F4  &kp F5  &kp F6  &none                       &kp KP_MINUS    &kp KP_N4  &kp KP_N5  &kp KP_N6  &kp KP_DIVIDE    &kp KP_EQUAL
&trans  &kp F12  &kp F1  &kp F2  &kp F3  &none   &trans    &kp BSPC  &kp KP_N0      &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_DOT      &trans
                         &trans  &trans  &trans  &trans    &trans    &trans          &trans     &mo 1
            >;

            label = "f-num";
        };

        symbols {
            bindings = <
&trans  &trans         &trans           &trans           &trans               &trans                        &trans     &trans        &trans       &trans               &trans                &trans
&trans  &kp EXCLAMATION  &kp AT_SIGN      &kp POUND          &kp DOLLAR             &kp PERCENT                      &kp CARET  &kp AMPERSAND  &kp ASTERISK  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PIPE
&trans  &kp GRAVE        &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp EQUAL                        &dash_dance 0 MINUS  &trans         &trans        &trans                &trans                 &trans
&trans  &kp TILDE        &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp PLUS     &trans    &em_dash  &kp UNDER  &trans         &trans        &trans                &trans                 &trans
                                          &trans             &trans                 &trans       &trans    &trans    &trans     &trans         &trans
            >;

            label = "sym";
        };

        navigation {
            bindings = <
&trans  &trans  &trans    &trans            &trans             &trans                     &kp PSCRN  &none     &none   &none      &trans  &trans
&trans  &trans  &trans    &trans            &trans             &trans                     &trans     &trans    &trans  &trans     &trans  &trans
&trans  &trans  &kp HOME  &kp PG_UP         &kp PG_DN          &kp END                    &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &trans  &trans
&trans  &trans  &trans    &kp LG(LC(LEFT))  &kp LC(LG(RIGHT))  &trans   &trans    &trans  &trans     &none     &none   &none      &trans  &trans
                          &trans            &trans             &trans   &trans    &trans  &trans     &trans    &trans
            >;

            label = "nav";
        };

        board {
            bindings = <
&kp CAPS  &bt BT_DISC 0  &bt BT_DISC 1  &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                  &kp KP_NLCK  &none  &none   &bt BT_PRV    &bt BT_NXT    &bt BT_CLR
&none     &none          &none          &none          &none          &none                          &none        &none  &none   &none         &none         &none
&none     &none          &none          &none          &none          &none                          &none        &none  &none   &kp C_PREV    &kp C_NEXT    &kp C_PP
&none     &none          &none          &none          &none          &none          &none    &none  &none        &none  &none   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE
                                       &none          &none          &none          &none    &none  &none        &none  &trans
            >;

            label = "keeb";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};